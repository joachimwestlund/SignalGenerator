
SignalGenerator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000924  000009b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000924  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800116  00800116  000009ce  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ca4  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000885  00000000  00000000  000017b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000068e  00000000  00000000  0000203d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  000026cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000499  00000000  00000000  0000284c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000054e  00000000  00000000  00002ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003233  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e2       	ldi	r30, 0x24	; 36
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  9e:	0c 94 90 04 	jmp	0x920	; 0x920 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2C_Init>:
		return(status);
	
	I2C_Stop();
	
	return(0);	
}
  a6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  aa:	88 e9       	ldi	r24, 0x98	; 152
  ac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  b0:	84 e0       	ldi	r24, 0x04	; 4
  b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b6:	08 95       	ret

000000b8 <I2C_Start>:
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <I2C_Start+0x6>
  c6:	08 95       	ret

000000c8 <I2C_Stop>:
  c8:	84 e9       	ldi	r24, 0x94	; 148
  ca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  ce:	08 95       	ret

000000d0 <I2C_Write>:
  d0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  d4:	84 e8       	ldi	r24, 0x84	; 132
  d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  da:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  de:	88 23       	and	r24, r24
  e0:	e4 f7       	brge	.-8      	; 0xda <I2C_Write+0xa>
  e2:	08 95       	ret

000000e4 <I2C_GetStatus>:
  e4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  e8:	88 7f       	andi	r24, 0xF8	; 248
  ea:	08 95       	ret

000000ec <I2C_WriteString>:
/**
*	7-bit addressing mode
*	Returns 0 on success and status code on failure
*/
uint8_t I2C_WriteString(uint8_t addr, uint8_t *data, uint8_t size)
{
  ec:	cf 92       	push	r12
  ee:	df 92       	push	r13
  f0:	ff 92       	push	r15
  f2:	0f 93       	push	r16
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	c8 2f       	mov	r28, r24
  fc:	8b 01       	movw	r16, r22
  fe:	f4 2e       	mov	r15, r20
	uint8_t status = 0;
	uint8_t i = 0;
	
	I2C_Start();
 100:	0e 94 5c 00 	call	0xb8	; 0xb8 <I2C_Start>
	status = I2C_GetStatus();
 104:	0e 94 72 00 	call	0xe4	; 0xe4 <I2C_GetStatus>
	if (status != 0x08)
 108:	88 30       	cpi	r24, 0x08	; 8
 10a:	f9 f4       	brne	.+62     	; 0x14a <I2C_WriteString+0x5e>
		return(status);

	addr &= 0b11111110;		// write mode
	
	I2C_Write(addr);
 10c:	8c 2f       	mov	r24, r28
 10e:	8e 7f       	andi	r24, 0xFE	; 254
 110:	0e 94 68 00 	call	0xd0	; 0xd0 <I2C_Write>
	status = I2C_GetStatus();
 114:	0e 94 72 00 	call	0xe4	; 0xe4 <I2C_GetStatus>
 118:	c8 2f       	mov	r28, r24
	if (status != 0x18)
 11a:	88 31       	cpi	r24, 0x18	; 24
 11c:	a1 f4       	brne	.+40     	; 0x146 <I2C_WriteString+0x5a>
 11e:	d0 e0       	ldi	r29, 0x00	; 0
 120:	0c c0       	rjmp	.+24     	; 0x13a <I2C_WriteString+0x4e>
		return(status);
	
	for (i = 0; i < size; i++)
	{
		I2C_Write(*data++);
 122:	68 01       	movw	r12, r16
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	c8 1a       	sub	r12, r24
 128:	d8 0a       	sbc	r13, r24
 12a:	f8 01       	movw	r30, r16
 12c:	80 81       	ld	r24, Z
 12e:	0e 94 68 00 	call	0xd0	; 0xd0 <I2C_Write>
		if (status != 0x18)
 132:	c8 31       	cpi	r28, 0x18	; 24
 134:	49 f4       	brne	.+18     	; 0x148 <I2C_WriteString+0x5c>
	I2C_Write(addr);
	status = I2C_GetStatus();
	if (status != 0x18)
		return(status);
	
	for (i = 0; i < size; i++)
 136:	df 5f       	subi	r29, 0xFF	; 255
	{
		I2C_Write(*data++);
 138:	86 01       	movw	r16, r12
	I2C_Write(addr);
	status = I2C_GetStatus();
	if (status != 0x18)
		return(status);
	
	for (i = 0; i < size; i++)
 13a:	df 15       	cp	r29, r15
 13c:	90 f3       	brcs	.-28     	; 0x122 <I2C_WriteString+0x36>
		I2C_Write(*data++);
		if (status != 0x18)
			return(status);
	}
	
	I2C_Stop();
 13e:	0e 94 64 00 	call	0xc8	; 0xc8 <I2C_Stop>
	
	return(0);
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <I2C_WriteString+0x5e>
 146:	01 c0       	rjmp	.+2      	; 0x14a <I2C_WriteString+0x5e>
	
	for (i = 0; i < size; i++)
	{
		I2C_Write(*data++);
		if (status != 0x18)
			return(status);
 148:	8c 2f       	mov	r24, r28
	}
	
	I2C_Stop();
	
	return(0);
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	1f 91       	pop	r17
 150:	0f 91       	pop	r16
 152:	ff 90       	pop	r15
 154:	df 90       	pop	r13
 156:	cf 90       	pop	r12
 158:	08 95       	ret

0000015a <__vector_5>:
char set_count_buf[4] = {0};

volatile uint8_t updateLCD = 1;

ISR (PCINT2_vect)
{
 15a:	1f 92       	push	r1
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
 164:	8f 93       	push	r24
	if ((PIND & (1 << PIND5)) != (1 << PIND5))				// if interrupt pin is low
 166:	4d 99       	sbic	0x09, 5	; 9
 168:	10 c0       	rjmp	.+32     	; 0x18a <__vector_5+0x30>
	{
		if ((PIND & (1 << PIND6)) != (1 << PIND6))			// and if the pd6 pin is low then the direction is left
 16a:	4e 99       	sbic	0x09, 6	; 9
 16c:	06 c0       	rjmp	.+12     	; 0x17a <__vector_5+0x20>
		{
			count--;	
 16e:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <count>
 172:	81 50       	subi	r24, 0x01	; 1
 174:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <count>
 178:	05 c0       	rjmp	.+10     	; 0x184 <__vector_5+0x2a>
		}
		else
		{
			count++;										// if pd6 is high then the direction is right
 17a:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <count>
 17e:	8f 5f       	subi	r24, 0xFF	; 255
 180:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <count>
		}
		updateLCD = 1;
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
}
 18a:	8f 91       	pop	r24
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <main>:
int main(void)
{	
	uint8_t status = 0;
	uint8_t *str = (uint8_t*)"Rotary Encoder";
	
	DDRB |= (1 << PINB0);
 196:	84 b1       	in	r24, 0x04	; 4
 198:	81 60       	ori	r24, 0x01	; 1
 19a:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PINB0);
 19c:	85 b1       	in	r24, 0x05	; 5
 19e:	81 60       	ori	r24, 0x01	; 1
 1a0:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a2:	2f ef       	ldi	r18, 0xFF	; 255
 1a4:	81 ee       	ldi	r24, 0xE1	; 225
 1a6:	94 e0       	ldi	r25, 0x04	; 4
 1a8:	21 50       	subi	r18, 0x01	; 1
 1aa:	80 40       	sbci	r24, 0x00	; 0
 1ac:	90 40       	sbci	r25, 0x00	; 0
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <main+0x12>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <main+0x1c>
 1b2:	00 00       	nop
	
	_delay_ms(100);		// delay so the LCD can initialize
	
	I2C_Init();
 1b4:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_Init>
	
	LCD_WriteCommand(0x50, 0x51, 0x00);
 1b8:	40 e0       	ldi	r20, 0x00	; 0
 1ba:	61 e5       	ldi	r22, 0x51	; 81
 1bc:	80 e5       	ldi	r24, 0x50	; 80
 1be:	0e 94 66 01 	call	0x2cc	; 0x2cc <LCD_WriteCommand>
 1c2:	8f e3       	ldi	r24, 0x3F	; 63
 1c4:	9f e1       	ldi	r25, 0x1F	; 31
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <main+0x30>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x36>
 1cc:	00 00       	nop
	_delay_ms(2);
	if ((status = I2C_WriteString(0x50, str, strlen((char *)str))) != 0)
 1ce:	4e e0       	ldi	r20, 0x0E	; 14
 1d0:	61 e0       	ldi	r22, 0x01	; 1
 1d2:	71 e0       	ldi	r23, 0x01	; 1
 1d4:	80 e5       	ldi	r24, 0x50	; 80
 1d6:	0e 94 76 00 	call	0xec	; 0xec <I2C_WriteString>
 1da:	81 11       	cpse	r24, r1
 1dc:	ff cf       	rjmp	.-2      	; 0x1dc <main+0x46>
		
	//DDRD &= 0b01111111;										// pin7 as input
	//PORTD |= 0b10000000;									// enable pull-up on pin7	these where used to debug stuff

	// Lets enable PCINT21 on pin PD5
	DDRD &= 0b11011111;										// pin5 port d is input
 1de:	8a b1       	in	r24, 0x0a	; 10
 1e0:	8f 7d       	andi	r24, 0xDF	; 223
 1e2:	8a b9       	out	0x0a, r24	; 10
	PORTD |= 0b00100000;									// enable pull-up on pin
 1e4:	8b b1       	in	r24, 0x0b	; 11
 1e6:	80 62       	ori	r24, 0x20	; 32
 1e8:	8b b9       	out	0x0b, r24	; 11
	PCICR = (1 << PCIE2);
 1ea:	84 e0       	ldi	r24, 0x04	; 4
 1ec:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	PCMSK2 |= 0b00100000;									// pin pd5 enabled for interrupt. pcint21 as interrupt.
 1f0:	ed e6       	ldi	r30, 0x6D	; 109
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	80 62       	ori	r24, 0x20	; 32
 1f8:	80 83       	st	Z, r24
	
	sei();
 1fa:	78 94       	sei
	
    while (1) 
    {
		if ((PIND & (1 << PIND7)) != (1 << PIND7))			// is pin7 low?
 1fc:	4f 99       	sbic	0x09, 7	; 9
 1fe:	0a c0       	rjmp	.+20     	; 0x214 <main+0x7e>
		{
				set_count = count;
 200:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <count>
 204:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <set_count>
				updateLCD = 1;
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
				PORTB ^= (1 << PINB0);						// shift on or off led for testing
 20e:	95 b1       	in	r25, 0x05	; 5
 210:	89 27       	eor	r24, r25
 212:	85 b9       	out	0x05, r24	; 5
		}
		
		if (updateLCD == 1)
 214:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	81 f7       	brne	.-32     	; 0x1fc <main+0x66>
 21c:	8f e3       	ldi	r24, 0x3F	; 63
 21e:	9f e1       	ldi	r25, 0x1F	; 31
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <main+0x8a>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x90>
 226:	00 00       	nop
		{
			_delay_ms(2);
			LCD_WriteCommand(0x50, 0x45, 0x40);
 228:	40 e4       	ldi	r20, 0x40	; 64
 22a:	65 e4       	ldi	r22, 0x45	; 69
 22c:	80 e5       	ldi	r24, 0x50	; 80
 22e:	0e 94 66 01 	call	0x2cc	; 0x2cc <LCD_WriteCommand>
			snprintf(count_buf, 0x04, "%03d", count);
 232:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <count>
 236:	1f 92       	push	r1
 238:	8f 93       	push	r24
 23a:	c0 e1       	ldi	r28, 0x10	; 16
 23c:	d1 e0       	ldi	r29, 0x01	; 1
 23e:	df 93       	push	r29
 240:	cf 93       	push	r28
 242:	1f 92       	push	r1
 244:	14 e0       	ldi	r17, 0x04	; 4
 246:	1f 93       	push	r17
 248:	8a e1       	ldi	r24, 0x1A	; 26
 24a:	91 e0       	ldi	r25, 0x01	; 1
 24c:	9f 93       	push	r25
 24e:	8f 93       	push	r24
 250:	0e 94 98 01 	call	0x330	; 0x330 <snprintf>
 254:	8f e3       	ldi	r24, 0x3F	; 63
 256:	9f e1       	ldi	r25, 0x1F	; 31
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <main+0xc2>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <main+0xc8>
 25e:	00 00       	nop
			_delay_ms(2);
			I2C_WriteString(0x50, (uint8_t *)count_buf, 0x03);
 260:	43 e0       	ldi	r20, 0x03	; 3
 262:	6a e1       	ldi	r22, 0x1A	; 26
 264:	71 e0       	ldi	r23, 0x01	; 1
 266:	80 e5       	ldi	r24, 0x50	; 80
 268:	0e 94 76 00 	call	0xec	; 0xec <I2C_WriteString>
 26c:	8f e3       	ldi	r24, 0x3F	; 63
 26e:	9f e1       	ldi	r25, 0x1F	; 31
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <main+0xda>
 274:	00 c0       	rjmp	.+0      	; 0x276 <main+0xe0>
 276:	00 00       	nop
			
			_delay_ms(2);
			LCD_WriteCommand(0x50, 0x45, 0x4a);
 278:	4a e4       	ldi	r20, 0x4A	; 74
 27a:	65 e4       	ldi	r22, 0x45	; 69
 27c:	80 e5       	ldi	r24, 0x50	; 80
 27e:	0e 94 66 01 	call	0x2cc	; 0x2cc <LCD_WriteCommand>
			snprintf(set_count_buf, 0x04, "%03d", set_count);
 282:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <set_count>
 286:	1f 92       	push	r1
 288:	8f 93       	push	r24
 28a:	df 93       	push	r29
 28c:	cf 93       	push	r28
 28e:	1f 92       	push	r1
 290:	1f 93       	push	r17
 292:	86 e1       	ldi	r24, 0x16	; 22
 294:	91 e0       	ldi	r25, 0x01	; 1
 296:	9f 93       	push	r25
 298:	8f 93       	push	r24
 29a:	0e 94 98 01 	call	0x330	; 0x330 <snprintf>
 29e:	8f e3       	ldi	r24, 0x3F	; 63
 2a0:	9f e1       	ldi	r25, 0x1F	; 31
 2a2:	01 97       	sbiw	r24, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <main+0x10c>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0x112>
 2a8:	00 00       	nop
			_delay_ms(2);
			I2C_WriteString(0x50, (uint8_t *)set_count_buf, 0x03);
 2aa:	43 e0       	ldi	r20, 0x03	; 3
 2ac:	66 e1       	ldi	r22, 0x16	; 22
 2ae:	71 e0       	ldi	r23, 0x01	; 1
 2b0:	80 e5       	ldi	r24, 0x50	; 80
 2b2:	0e 94 76 00 	call	0xec	; 0xec <I2C_WriteString>

			updateLCD = 0;
 2b6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 2ba:	8d b7       	in	r24, 0x3d	; 61
 2bc:	9e b7       	in	r25, 0x3e	; 62
 2be:	40 96       	adiw	r24, 0x10	; 16
 2c0:	0f b6       	in	r0, 0x3f	; 63
 2c2:	f8 94       	cli
 2c4:	9e bf       	out	0x3e, r25	; 62
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	8d bf       	out	0x3d, r24	; 61
 2ca:	98 cf       	rjmp	.-208    	; 0x1fc <main+0x66>

000002cc <LCD_WriteCommand>:
 */ 

#include "NHC_LCD.h"

uint8_t LCD_WriteCommand(uint8_t addr, uint8_t command, uint8_t data)
{
 2cc:	1f 93       	push	r17
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	c8 2f       	mov	r28, r24
 2d4:	d6 2f       	mov	r29, r22
 2d6:	14 2f       	mov	r17, r20
	uint8_t status = 0;
	
	I2C_Start();
 2d8:	0e 94 5c 00 	call	0xb8	; 0xb8 <I2C_Start>
	status = I2C_GetStatus();
 2dc:	0e 94 72 00 	call	0xe4	; 0xe4 <I2C_GetStatus>
	if (status != 0x08)
 2e0:	88 30       	cpi	r24, 0x08	; 8
 2e2:	11 f5       	brne	.+68     	; 0x328 <LCD_WriteCommand+0x5c>
	return(status);
	
	addr &= 0b11111110;		// setting LSB to 0 Write mode.
	
	I2C_Write(addr);
 2e4:	8c 2f       	mov	r24, r28
 2e6:	8e 7f       	andi	r24, 0xFE	; 254
 2e8:	0e 94 68 00 	call	0xd0	; 0xd0 <I2C_Write>
	status = I2C_GetStatus();
 2ec:	0e 94 72 00 	call	0xe4	; 0xe4 <I2C_GetStatus>
	if (status != 0x18)
 2f0:	88 31       	cpi	r24, 0x18	; 24
 2f2:	d1 f4       	brne	.+52     	; 0x328 <LCD_WriteCommand+0x5c>
		return(status);
	
	I2C_Write(0xfe);
 2f4:	8e ef       	ldi	r24, 0xFE	; 254
 2f6:	0e 94 68 00 	call	0xd0	; 0xd0 <I2C_Write>
	status = I2C_GetStatus();
 2fa:	0e 94 72 00 	call	0xe4	; 0xe4 <I2C_GetStatus>
	if (status != 0x28)
 2fe:	88 32       	cpi	r24, 0x28	; 40
 300:	99 f4       	brne	.+38     	; 0x328 <LCD_WriteCommand+0x5c>
		return(status);
	
	I2C_Write(command);
 302:	8d 2f       	mov	r24, r29
 304:	0e 94 68 00 	call	0xd0	; 0xd0 <I2C_Write>
	status = I2C_GetStatus();
 308:	0e 94 72 00 	call	0xe4	; 0xe4 <I2C_GetStatus>
	if (status != 0x28)
 30c:	88 32       	cpi	r24, 0x28	; 40
 30e:	61 f4       	brne	.+24     	; 0x328 <LCD_WriteCommand+0x5c>
		return(status);
	
	if (data != 0)
 310:	11 23       	and	r17, r17
 312:	39 f0       	breq	.+14     	; 0x322 <LCD_WriteCommand+0x56>
	{
		I2C_Write(data);
 314:	81 2f       	mov	r24, r17
 316:	0e 94 68 00 	call	0xd0	; 0xd0 <I2C_Write>
		status = I2C_GetStatus();
 31a:	0e 94 72 00 	call	0xe4	; 0xe4 <I2C_GetStatus>
		if (status != 0x28)
 31e:	88 32       	cpi	r24, 0x28	; 40
 320:	19 f4       	brne	.+6      	; 0x328 <LCD_WriteCommand+0x5c>
			return(status);
	}
	
	I2C_Stop();
 322:	0e 94 64 00 	call	0xc8	; 0xc8 <I2C_Stop>
	
	return(0);
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	df 91       	pop	r29
 32a:	cf 91       	pop	r28
 32c:	1f 91       	pop	r17
 32e:	08 95       	ret

00000330 <snprintf>:
 330:	ae e0       	ldi	r26, 0x0E	; 14
 332:	b0 e0       	ldi	r27, 0x00	; 0
 334:	ee e9       	ldi	r30, 0x9E	; 158
 336:	f1 e0       	ldi	r31, 0x01	; 1
 338:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__prologue_saves__+0x1c>
 33c:	0d 89       	ldd	r16, Y+21	; 0x15
 33e:	1e 89       	ldd	r17, Y+22	; 0x16
 340:	8f 89       	ldd	r24, Y+23	; 0x17
 342:	98 8d       	ldd	r25, Y+24	; 0x18
 344:	26 e0       	ldi	r18, 0x06	; 6
 346:	2c 83       	std	Y+4, r18	; 0x04
 348:	1a 83       	std	Y+2, r17	; 0x02
 34a:	09 83       	std	Y+1, r16	; 0x01
 34c:	97 ff       	sbrs	r25, 7
 34e:	02 c0       	rjmp	.+4      	; 0x354 <snprintf+0x24>
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	90 e8       	ldi	r25, 0x80	; 128
 354:	01 97       	sbiw	r24, 0x01	; 1
 356:	9e 83       	std	Y+6, r25	; 0x06
 358:	8d 83       	std	Y+5, r24	; 0x05
 35a:	ae 01       	movw	r20, r28
 35c:	45 5e       	subi	r20, 0xE5	; 229
 35e:	5f 4f       	sbci	r21, 0xFF	; 255
 360:	69 8d       	ldd	r22, Y+25	; 0x19
 362:	7a 8d       	ldd	r23, Y+26	; 0x1a
 364:	ce 01       	movw	r24, r28
 366:	01 96       	adiw	r24, 0x01	; 1
 368:	0e 94 c8 01 	call	0x390	; 0x390 <vfprintf>
 36c:	4d 81       	ldd	r20, Y+5	; 0x05
 36e:	5e 81       	ldd	r21, Y+6	; 0x06
 370:	57 fd       	sbrc	r21, 7
 372:	0a c0       	rjmp	.+20     	; 0x388 <snprintf+0x58>
 374:	2f 81       	ldd	r18, Y+7	; 0x07
 376:	38 85       	ldd	r19, Y+8	; 0x08
 378:	42 17       	cp	r20, r18
 37a:	53 07       	cpc	r21, r19
 37c:	0c f4       	brge	.+2      	; 0x380 <snprintf+0x50>
 37e:	9a 01       	movw	r18, r20
 380:	f8 01       	movw	r30, r16
 382:	e2 0f       	add	r30, r18
 384:	f3 1f       	adc	r31, r19
 386:	10 82       	st	Z, r1
 388:	2e 96       	adiw	r28, 0x0e	; 14
 38a:	e4 e0       	ldi	r30, 0x04	; 4
 38c:	0c 94 83 04 	jmp	0x906	; 0x906 <__stack+0x7>

00000390 <vfprintf>:
 390:	ab e0       	ldi	r26, 0x0B	; 11
 392:	b0 e0       	ldi	r27, 0x00	; 0
 394:	ee ec       	ldi	r30, 0xCE	; 206
 396:	f1 e0       	ldi	r31, 0x01	; 1
 398:	0c 94 59 04 	jmp	0x8b2	; 0x8b2 <__prologue_saves__>
 39c:	6c 01       	movw	r12, r24
 39e:	7b 01       	movw	r14, r22
 3a0:	8a 01       	movw	r16, r20
 3a2:	fc 01       	movw	r30, r24
 3a4:	17 82       	std	Z+7, r1	; 0x07
 3a6:	16 82       	std	Z+6, r1	; 0x06
 3a8:	83 81       	ldd	r24, Z+3	; 0x03
 3aa:	81 ff       	sbrs	r24, 1
 3ac:	cc c1       	rjmp	.+920    	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 3ae:	ce 01       	movw	r24, r28
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	3c 01       	movw	r6, r24
 3b4:	f6 01       	movw	r30, r12
 3b6:	93 81       	ldd	r25, Z+3	; 0x03
 3b8:	f7 01       	movw	r30, r14
 3ba:	93 fd       	sbrc	r25, 3
 3bc:	85 91       	lpm	r24, Z+
 3be:	93 ff       	sbrs	r25, 3
 3c0:	81 91       	ld	r24, Z+
 3c2:	7f 01       	movw	r14, r30
 3c4:	88 23       	and	r24, r24
 3c6:	09 f4       	brne	.+2      	; 0x3ca <vfprintf+0x3a>
 3c8:	ba c1       	rjmp	.+884    	; 0x73e <__EEPROM_REGION_LENGTH__+0x33e>
 3ca:	85 32       	cpi	r24, 0x25	; 37
 3cc:	39 f4       	brne	.+14     	; 0x3dc <vfprintf+0x4c>
 3ce:	93 fd       	sbrc	r25, 3
 3d0:	85 91       	lpm	r24, Z+
 3d2:	93 ff       	sbrs	r25, 3
 3d4:	81 91       	ld	r24, Z+
 3d6:	7f 01       	movw	r14, r30
 3d8:	85 32       	cpi	r24, 0x25	; 37
 3da:	29 f4       	brne	.+10     	; 0x3e6 <vfprintf+0x56>
 3dc:	b6 01       	movw	r22, r12
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 3e4:	e7 cf       	rjmp	.-50     	; 0x3b4 <vfprintf+0x24>
 3e6:	91 2c       	mov	r9, r1
 3e8:	21 2c       	mov	r2, r1
 3ea:	31 2c       	mov	r3, r1
 3ec:	ff e1       	ldi	r31, 0x1F	; 31
 3ee:	f3 15       	cp	r31, r3
 3f0:	d8 f0       	brcs	.+54     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3f2:	8b 32       	cpi	r24, 0x2B	; 43
 3f4:	79 f0       	breq	.+30     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3f6:	38 f4       	brcc	.+14     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f8:	80 32       	cpi	r24, 0x20	; 32
 3fa:	79 f0       	breq	.+30     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3fc:	83 32       	cpi	r24, 0x23	; 35
 3fe:	a1 f4       	brne	.+40     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 400:	23 2d       	mov	r18, r3
 402:	20 61       	ori	r18, 0x10	; 16
 404:	1d c0       	rjmp	.+58     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 406:	8d 32       	cpi	r24, 0x2D	; 45
 408:	61 f0       	breq	.+24     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 40a:	80 33       	cpi	r24, 0x30	; 48
 40c:	69 f4       	brne	.+26     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 40e:	23 2d       	mov	r18, r3
 410:	21 60       	ori	r18, 0x01	; 1
 412:	16 c0       	rjmp	.+44     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 414:	83 2d       	mov	r24, r3
 416:	82 60       	ori	r24, 0x02	; 2
 418:	38 2e       	mov	r3, r24
 41a:	e3 2d       	mov	r30, r3
 41c:	e4 60       	ori	r30, 0x04	; 4
 41e:	3e 2e       	mov	r3, r30
 420:	2a c0       	rjmp	.+84     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 422:	f3 2d       	mov	r31, r3
 424:	f8 60       	ori	r31, 0x08	; 8
 426:	1d c0       	rjmp	.+58     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 428:	37 fc       	sbrc	r3, 7
 42a:	2d c0       	rjmp	.+90     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 42c:	20 ed       	ldi	r18, 0xD0	; 208
 42e:	28 0f       	add	r18, r24
 430:	2a 30       	cpi	r18, 0x0A	; 10
 432:	40 f0       	brcs	.+16     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 434:	8e 32       	cpi	r24, 0x2E	; 46
 436:	b9 f4       	brne	.+46     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 438:	36 fc       	sbrc	r3, 6
 43a:	81 c1       	rjmp	.+770    	; 0x73e <__EEPROM_REGION_LENGTH__+0x33e>
 43c:	23 2d       	mov	r18, r3
 43e:	20 64       	ori	r18, 0x40	; 64
 440:	32 2e       	mov	r3, r18
 442:	19 c0       	rjmp	.+50     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 444:	36 fe       	sbrs	r3, 6
 446:	06 c0       	rjmp	.+12     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 448:	8a e0       	ldi	r24, 0x0A	; 10
 44a:	98 9e       	mul	r9, r24
 44c:	20 0d       	add	r18, r0
 44e:	11 24       	eor	r1, r1
 450:	92 2e       	mov	r9, r18
 452:	11 c0       	rjmp	.+34     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 454:	ea e0       	ldi	r30, 0x0A	; 10
 456:	2e 9e       	mul	r2, r30
 458:	20 0d       	add	r18, r0
 45a:	11 24       	eor	r1, r1
 45c:	22 2e       	mov	r2, r18
 45e:	f3 2d       	mov	r31, r3
 460:	f0 62       	ori	r31, 0x20	; 32
 462:	3f 2e       	mov	r3, r31
 464:	08 c0       	rjmp	.+16     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 466:	8c 36       	cpi	r24, 0x6C	; 108
 468:	21 f4       	brne	.+8      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46a:	83 2d       	mov	r24, r3
 46c:	80 68       	ori	r24, 0x80	; 128
 46e:	38 2e       	mov	r3, r24
 470:	02 c0       	rjmp	.+4      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 472:	88 36       	cpi	r24, 0x68	; 104
 474:	41 f4       	brne	.+16     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 476:	f7 01       	movw	r30, r14
 478:	93 fd       	sbrc	r25, 3
 47a:	85 91       	lpm	r24, Z+
 47c:	93 ff       	sbrs	r25, 3
 47e:	81 91       	ld	r24, Z+
 480:	7f 01       	movw	r14, r30
 482:	81 11       	cpse	r24, r1
 484:	b3 cf       	rjmp	.-154    	; 0x3ec <vfprintf+0x5c>
 486:	98 2f       	mov	r25, r24
 488:	9f 7d       	andi	r25, 0xDF	; 223
 48a:	95 54       	subi	r25, 0x45	; 69
 48c:	93 30       	cpi	r25, 0x03	; 3
 48e:	28 f4       	brcc	.+10     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 490:	0c 5f       	subi	r16, 0xFC	; 252
 492:	1f 4f       	sbci	r17, 0xFF	; 255
 494:	9f e3       	ldi	r25, 0x3F	; 63
 496:	99 83       	std	Y+1, r25	; 0x01
 498:	0d c0       	rjmp	.+26     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 49a:	83 36       	cpi	r24, 0x63	; 99
 49c:	31 f0       	breq	.+12     	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 49e:	83 37       	cpi	r24, 0x73	; 115
 4a0:	71 f0       	breq	.+28     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4a2:	83 35       	cpi	r24, 0x53	; 83
 4a4:	09 f0       	breq	.+2      	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 4a6:	59 c0       	rjmp	.+178    	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 4a8:	21 c0       	rjmp	.+66     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4aa:	f8 01       	movw	r30, r16
 4ac:	80 81       	ld	r24, Z
 4ae:	89 83       	std	Y+1, r24	; 0x01
 4b0:	0e 5f       	subi	r16, 0xFE	; 254
 4b2:	1f 4f       	sbci	r17, 0xFF	; 255
 4b4:	88 24       	eor	r8, r8
 4b6:	83 94       	inc	r8
 4b8:	91 2c       	mov	r9, r1
 4ba:	53 01       	movw	r10, r6
 4bc:	13 c0       	rjmp	.+38     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4be:	28 01       	movw	r4, r16
 4c0:	f2 e0       	ldi	r31, 0x02	; 2
 4c2:	4f 0e       	add	r4, r31
 4c4:	51 1c       	adc	r5, r1
 4c6:	f8 01       	movw	r30, r16
 4c8:	a0 80       	ld	r10, Z
 4ca:	b1 80       	ldd	r11, Z+1	; 0x01
 4cc:	36 fe       	sbrs	r3, 6
 4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4d0:	69 2d       	mov	r22, r9
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	02 c0       	rjmp	.+4      	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4d6:	6f ef       	ldi	r22, 0xFF	; 255
 4d8:	7f ef       	ldi	r23, 0xFF	; 255
 4da:	c5 01       	movw	r24, r10
 4dc:	0e 94 b4 03 	call	0x768	; 0x768 <strnlen>
 4e0:	4c 01       	movw	r8, r24
 4e2:	82 01       	movw	r16, r4
 4e4:	f3 2d       	mov	r31, r3
 4e6:	ff 77       	andi	r31, 0x7F	; 127
 4e8:	3f 2e       	mov	r3, r31
 4ea:	16 c0       	rjmp	.+44     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 4ec:	28 01       	movw	r4, r16
 4ee:	22 e0       	ldi	r18, 0x02	; 2
 4f0:	42 0e       	add	r4, r18
 4f2:	51 1c       	adc	r5, r1
 4f4:	f8 01       	movw	r30, r16
 4f6:	a0 80       	ld	r10, Z
 4f8:	b1 80       	ldd	r11, Z+1	; 0x01
 4fa:	36 fe       	sbrs	r3, 6
 4fc:	03 c0       	rjmp	.+6      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 4fe:	69 2d       	mov	r22, r9
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	02 c0       	rjmp	.+4      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 504:	6f ef       	ldi	r22, 0xFF	; 255
 506:	7f ef       	ldi	r23, 0xFF	; 255
 508:	c5 01       	movw	r24, r10
 50a:	0e 94 a9 03 	call	0x752	; 0x752 <strnlen_P>
 50e:	4c 01       	movw	r8, r24
 510:	f3 2d       	mov	r31, r3
 512:	f0 68       	ori	r31, 0x80	; 128
 514:	3f 2e       	mov	r3, r31
 516:	82 01       	movw	r16, r4
 518:	33 fc       	sbrc	r3, 3
 51a:	1b c0       	rjmp	.+54     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 51c:	82 2d       	mov	r24, r2
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	88 16       	cp	r8, r24
 522:	99 06       	cpc	r9, r25
 524:	b0 f4       	brcc	.+44     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 526:	b6 01       	movw	r22, r12
 528:	80 e2       	ldi	r24, 0x20	; 32
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 530:	2a 94       	dec	r2
 532:	f4 cf       	rjmp	.-24     	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 534:	f5 01       	movw	r30, r10
 536:	37 fc       	sbrc	r3, 7
 538:	85 91       	lpm	r24, Z+
 53a:	37 fe       	sbrs	r3, 7
 53c:	81 91       	ld	r24, Z+
 53e:	5f 01       	movw	r10, r30
 540:	b6 01       	movw	r22, r12
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 548:	21 10       	cpse	r2, r1
 54a:	2a 94       	dec	r2
 54c:	21 e0       	ldi	r18, 0x01	; 1
 54e:	82 1a       	sub	r8, r18
 550:	91 08       	sbc	r9, r1
 552:	81 14       	cp	r8, r1
 554:	91 04       	cpc	r9, r1
 556:	71 f7       	brne	.-36     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 558:	e8 c0       	rjmp	.+464    	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 55a:	84 36       	cpi	r24, 0x64	; 100
 55c:	11 f0       	breq	.+4      	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
 55e:	89 36       	cpi	r24, 0x69	; 105
 560:	41 f5       	brne	.+80     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
 562:	f8 01       	movw	r30, r16
 564:	37 fe       	sbrs	r3, 7
 566:	07 c0       	rjmp	.+14     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 568:	60 81       	ld	r22, Z
 56a:	71 81       	ldd	r23, Z+1	; 0x01
 56c:	82 81       	ldd	r24, Z+2	; 0x02
 56e:	93 81       	ldd	r25, Z+3	; 0x03
 570:	0c 5f       	subi	r16, 0xFC	; 252
 572:	1f 4f       	sbci	r17, 0xFF	; 255
 574:	08 c0       	rjmp	.+16     	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 576:	60 81       	ld	r22, Z
 578:	71 81       	ldd	r23, Z+1	; 0x01
 57a:	07 2e       	mov	r0, r23
 57c:	00 0c       	add	r0, r0
 57e:	88 0b       	sbc	r24, r24
 580:	99 0b       	sbc	r25, r25
 582:	0e 5f       	subi	r16, 0xFE	; 254
 584:	1f 4f       	sbci	r17, 0xFF	; 255
 586:	f3 2d       	mov	r31, r3
 588:	ff 76       	andi	r31, 0x6F	; 111
 58a:	3f 2e       	mov	r3, r31
 58c:	97 ff       	sbrs	r25, 7
 58e:	09 c0       	rjmp	.+18     	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 590:	90 95       	com	r25
 592:	80 95       	com	r24
 594:	70 95       	com	r23
 596:	61 95       	neg	r22
 598:	7f 4f       	sbci	r23, 0xFF	; 255
 59a:	8f 4f       	sbci	r24, 0xFF	; 255
 59c:	9f 4f       	sbci	r25, 0xFF	; 255
 59e:	f0 68       	ori	r31, 0x80	; 128
 5a0:	3f 2e       	mov	r3, r31
 5a2:	2a e0       	ldi	r18, 0x0A	; 10
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	a3 01       	movw	r20, r6
 5a8:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__ultoa_invert>
 5ac:	88 2e       	mov	r8, r24
 5ae:	86 18       	sub	r8, r6
 5b0:	45 c0       	rjmp	.+138    	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
 5b2:	85 37       	cpi	r24, 0x75	; 117
 5b4:	31 f4       	brne	.+12     	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5b6:	23 2d       	mov	r18, r3
 5b8:	2f 7e       	andi	r18, 0xEF	; 239
 5ba:	b2 2e       	mov	r11, r18
 5bc:	2a e0       	ldi	r18, 0x0A	; 10
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	25 c0       	rjmp	.+74     	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 5c2:	93 2d       	mov	r25, r3
 5c4:	99 7f       	andi	r25, 0xF9	; 249
 5c6:	b9 2e       	mov	r11, r25
 5c8:	8f 36       	cpi	r24, 0x6F	; 111
 5ca:	c1 f0       	breq	.+48     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5cc:	18 f4       	brcc	.+6      	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5ce:	88 35       	cpi	r24, 0x58	; 88
 5d0:	79 f0       	breq	.+30     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5d2:	b5 c0       	rjmp	.+362    	; 0x73e <__EEPROM_REGION_LENGTH__+0x33e>
 5d4:	80 37       	cpi	r24, 0x70	; 112
 5d6:	19 f0       	breq	.+6      	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 5d8:	88 37       	cpi	r24, 0x78	; 120
 5da:	21 f0       	breq	.+8      	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5dc:	b0 c0       	rjmp	.+352    	; 0x73e <__EEPROM_REGION_LENGTH__+0x33e>
 5de:	e9 2f       	mov	r30, r25
 5e0:	e0 61       	ori	r30, 0x10	; 16
 5e2:	be 2e       	mov	r11, r30
 5e4:	b4 fe       	sbrs	r11, 4
 5e6:	0d c0       	rjmp	.+26     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5e8:	fb 2d       	mov	r31, r11
 5ea:	f4 60       	ori	r31, 0x04	; 4
 5ec:	bf 2e       	mov	r11, r31
 5ee:	09 c0       	rjmp	.+18     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5f0:	34 fe       	sbrs	r3, 4
 5f2:	0a c0       	rjmp	.+20     	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 5f4:	29 2f       	mov	r18, r25
 5f6:	26 60       	ori	r18, 0x06	; 6
 5f8:	b2 2e       	mov	r11, r18
 5fa:	06 c0       	rjmp	.+12     	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 5fc:	28 e0       	ldi	r18, 0x08	; 8
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	05 c0       	rjmp	.+10     	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 602:	20 e1       	ldi	r18, 0x10	; 16
 604:	30 e0       	ldi	r19, 0x00	; 0
 606:	02 c0       	rjmp	.+4      	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 608:	20 e1       	ldi	r18, 0x10	; 16
 60a:	32 e0       	ldi	r19, 0x02	; 2
 60c:	f8 01       	movw	r30, r16
 60e:	b7 fe       	sbrs	r11, 7
 610:	07 c0       	rjmp	.+14     	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 612:	60 81       	ld	r22, Z
 614:	71 81       	ldd	r23, Z+1	; 0x01
 616:	82 81       	ldd	r24, Z+2	; 0x02
 618:	93 81       	ldd	r25, Z+3	; 0x03
 61a:	0c 5f       	subi	r16, 0xFC	; 252
 61c:	1f 4f       	sbci	r17, 0xFF	; 255
 61e:	06 c0       	rjmp	.+12     	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 620:	60 81       	ld	r22, Z
 622:	71 81       	ldd	r23, Z+1	; 0x01
 624:	80 e0       	ldi	r24, 0x00	; 0
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	0e 5f       	subi	r16, 0xFE	; 254
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	a3 01       	movw	r20, r6
 62e:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__ultoa_invert>
 632:	88 2e       	mov	r8, r24
 634:	86 18       	sub	r8, r6
 636:	fb 2d       	mov	r31, r11
 638:	ff 77       	andi	r31, 0x7F	; 127
 63a:	3f 2e       	mov	r3, r31
 63c:	36 fe       	sbrs	r3, 6
 63e:	0d c0       	rjmp	.+26     	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 640:	23 2d       	mov	r18, r3
 642:	2e 7f       	andi	r18, 0xFE	; 254
 644:	a2 2e       	mov	r10, r18
 646:	89 14       	cp	r8, r9
 648:	58 f4       	brcc	.+22     	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 64a:	34 fe       	sbrs	r3, 4
 64c:	0b c0       	rjmp	.+22     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 64e:	32 fc       	sbrc	r3, 2
 650:	09 c0       	rjmp	.+18     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 652:	83 2d       	mov	r24, r3
 654:	8e 7e       	andi	r24, 0xEE	; 238
 656:	a8 2e       	mov	r10, r24
 658:	05 c0       	rjmp	.+10     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 65a:	b8 2c       	mov	r11, r8
 65c:	a3 2c       	mov	r10, r3
 65e:	03 c0       	rjmp	.+6      	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 660:	b8 2c       	mov	r11, r8
 662:	01 c0       	rjmp	.+2      	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 664:	b9 2c       	mov	r11, r9
 666:	a4 fe       	sbrs	r10, 4
 668:	0f c0       	rjmp	.+30     	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
 66a:	fe 01       	movw	r30, r28
 66c:	e8 0d       	add	r30, r8
 66e:	f1 1d       	adc	r31, r1
 670:	80 81       	ld	r24, Z
 672:	80 33       	cpi	r24, 0x30	; 48
 674:	21 f4       	brne	.+8      	; 0x67e <__EEPROM_REGION_LENGTH__+0x27e>
 676:	9a 2d       	mov	r25, r10
 678:	99 7e       	andi	r25, 0xE9	; 233
 67a:	a9 2e       	mov	r10, r25
 67c:	09 c0       	rjmp	.+18     	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 67e:	a2 fe       	sbrs	r10, 2
 680:	06 c0       	rjmp	.+12     	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
 682:	b3 94       	inc	r11
 684:	b3 94       	inc	r11
 686:	04 c0       	rjmp	.+8      	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 688:	8a 2d       	mov	r24, r10
 68a:	86 78       	andi	r24, 0x86	; 134
 68c:	09 f0       	breq	.+2      	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 68e:	b3 94       	inc	r11
 690:	a3 fc       	sbrc	r10, 3
 692:	11 c0       	rjmp	.+34     	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 694:	a0 fe       	sbrs	r10, 0
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 698:	b2 14       	cp	r11, r2
 69a:	88 f4       	brcc	.+34     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 69c:	28 0c       	add	r2, r8
 69e:	92 2c       	mov	r9, r2
 6a0:	9b 18       	sub	r9, r11
 6a2:	0e c0       	rjmp	.+28     	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 6a4:	b2 14       	cp	r11, r2
 6a6:	60 f4       	brcc	.+24     	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 6a8:	b6 01       	movw	r22, r12
 6aa:	80 e2       	ldi	r24, 0x20	; 32
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 6b2:	b3 94       	inc	r11
 6b4:	f7 cf       	rjmp	.-18     	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 6b6:	b2 14       	cp	r11, r2
 6b8:	18 f4       	brcc	.+6      	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 6ba:	2b 18       	sub	r2, r11
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 6be:	98 2c       	mov	r9, r8
 6c0:	21 2c       	mov	r2, r1
 6c2:	a4 fe       	sbrs	r10, 4
 6c4:	10 c0       	rjmp	.+32     	; 0x6e6 <__EEPROM_REGION_LENGTH__+0x2e6>
 6c6:	b6 01       	movw	r22, r12
 6c8:	80 e3       	ldi	r24, 0x30	; 48
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 6d0:	a2 fe       	sbrs	r10, 2
 6d2:	17 c0       	rjmp	.+46     	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 6d4:	a1 fc       	sbrc	r10, 1
 6d6:	03 c0       	rjmp	.+6      	; 0x6de <__EEPROM_REGION_LENGTH__+0x2de>
 6d8:	88 e7       	ldi	r24, 0x78	; 120
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <__EEPROM_REGION_LENGTH__+0x2e2>
 6de:	88 e5       	ldi	r24, 0x58	; 88
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	b6 01       	movw	r22, r12
 6e4:	0c c0       	rjmp	.+24     	; 0x6fe <__EEPROM_REGION_LENGTH__+0x2fe>
 6e6:	8a 2d       	mov	r24, r10
 6e8:	86 78       	andi	r24, 0x86	; 134
 6ea:	59 f0       	breq	.+22     	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 6ec:	a1 fe       	sbrs	r10, 1
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
 6f0:	8b e2       	ldi	r24, 0x2B	; 43
 6f2:	01 c0       	rjmp	.+2      	; 0x6f6 <__EEPROM_REGION_LENGTH__+0x2f6>
 6f4:	80 e2       	ldi	r24, 0x20	; 32
 6f6:	a7 fc       	sbrc	r10, 7
 6f8:	8d e2       	ldi	r24, 0x2D	; 45
 6fa:	b6 01       	movw	r22, r12
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 702:	89 14       	cp	r8, r9
 704:	38 f4       	brcc	.+14     	; 0x714 <__EEPROM_REGION_LENGTH__+0x314>
 706:	b6 01       	movw	r22, r12
 708:	80 e3       	ldi	r24, 0x30	; 48
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 710:	9a 94       	dec	r9
 712:	f7 cf       	rjmp	.-18     	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 714:	8a 94       	dec	r8
 716:	f3 01       	movw	r30, r6
 718:	e8 0d       	add	r30, r8
 71a:	f1 1d       	adc	r31, r1
 71c:	80 81       	ld	r24, Z
 71e:	b6 01       	movw	r22, r12
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 726:	81 10       	cpse	r8, r1
 728:	f5 cf       	rjmp	.-22     	; 0x714 <__EEPROM_REGION_LENGTH__+0x314>
 72a:	22 20       	and	r2, r2
 72c:	09 f4       	brne	.+2      	; 0x730 <__EEPROM_REGION_LENGTH__+0x330>
 72e:	42 ce       	rjmp	.-892    	; 0x3b4 <vfprintf+0x24>
 730:	b6 01       	movw	r22, r12
 732:	80 e2       	ldi	r24, 0x20	; 32
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 bf 03 	call	0x77e	; 0x77e <fputc>
 73a:	2a 94       	dec	r2
 73c:	f6 cf       	rjmp	.-20     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 73e:	f6 01       	movw	r30, r12
 740:	86 81       	ldd	r24, Z+6	; 0x06
 742:	97 81       	ldd	r25, Z+7	; 0x07
 744:	02 c0       	rjmp	.+4      	; 0x74a <__EEPROM_REGION_LENGTH__+0x34a>
 746:	8f ef       	ldi	r24, 0xFF	; 255
 748:	9f ef       	ldi	r25, 0xFF	; 255
 74a:	2b 96       	adiw	r28, 0x0b	; 11
 74c:	e2 e1       	ldi	r30, 0x12	; 18
 74e:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__epilogue_restores__>

00000752 <strnlen_P>:
 752:	fc 01       	movw	r30, r24
 754:	05 90       	lpm	r0, Z+
 756:	61 50       	subi	r22, 0x01	; 1
 758:	70 40       	sbci	r23, 0x00	; 0
 75a:	01 10       	cpse	r0, r1
 75c:	d8 f7       	brcc	.-10     	; 0x754 <strnlen_P+0x2>
 75e:	80 95       	com	r24
 760:	90 95       	com	r25
 762:	8e 0f       	add	r24, r30
 764:	9f 1f       	adc	r25, r31
 766:	08 95       	ret

00000768 <strnlen>:
 768:	fc 01       	movw	r30, r24
 76a:	61 50       	subi	r22, 0x01	; 1
 76c:	70 40       	sbci	r23, 0x00	; 0
 76e:	01 90       	ld	r0, Z+
 770:	01 10       	cpse	r0, r1
 772:	d8 f7       	brcc	.-10     	; 0x76a <strnlen+0x2>
 774:	80 95       	com	r24
 776:	90 95       	com	r25
 778:	8e 0f       	add	r24, r30
 77a:	9f 1f       	adc	r25, r31
 77c:	08 95       	ret

0000077e <fputc>:
 77e:	0f 93       	push	r16
 780:	1f 93       	push	r17
 782:	cf 93       	push	r28
 784:	df 93       	push	r29
 786:	fb 01       	movw	r30, r22
 788:	23 81       	ldd	r18, Z+3	; 0x03
 78a:	21 fd       	sbrc	r18, 1
 78c:	03 c0       	rjmp	.+6      	; 0x794 <fputc+0x16>
 78e:	8f ef       	ldi	r24, 0xFF	; 255
 790:	9f ef       	ldi	r25, 0xFF	; 255
 792:	2c c0       	rjmp	.+88     	; 0x7ec <fputc+0x6e>
 794:	22 ff       	sbrs	r18, 2
 796:	16 c0       	rjmp	.+44     	; 0x7c4 <fputc+0x46>
 798:	46 81       	ldd	r20, Z+6	; 0x06
 79a:	57 81       	ldd	r21, Z+7	; 0x07
 79c:	24 81       	ldd	r18, Z+4	; 0x04
 79e:	35 81       	ldd	r19, Z+5	; 0x05
 7a0:	42 17       	cp	r20, r18
 7a2:	53 07       	cpc	r21, r19
 7a4:	44 f4       	brge	.+16     	; 0x7b6 <fputc+0x38>
 7a6:	a0 81       	ld	r26, Z
 7a8:	b1 81       	ldd	r27, Z+1	; 0x01
 7aa:	9d 01       	movw	r18, r26
 7ac:	2f 5f       	subi	r18, 0xFF	; 255
 7ae:	3f 4f       	sbci	r19, 0xFF	; 255
 7b0:	31 83       	std	Z+1, r19	; 0x01
 7b2:	20 83       	st	Z, r18
 7b4:	8c 93       	st	X, r24
 7b6:	26 81       	ldd	r18, Z+6	; 0x06
 7b8:	37 81       	ldd	r19, Z+7	; 0x07
 7ba:	2f 5f       	subi	r18, 0xFF	; 255
 7bc:	3f 4f       	sbci	r19, 0xFF	; 255
 7be:	37 83       	std	Z+7, r19	; 0x07
 7c0:	26 83       	std	Z+6, r18	; 0x06
 7c2:	14 c0       	rjmp	.+40     	; 0x7ec <fputc+0x6e>
 7c4:	8b 01       	movw	r16, r22
 7c6:	ec 01       	movw	r28, r24
 7c8:	fb 01       	movw	r30, r22
 7ca:	00 84       	ldd	r0, Z+8	; 0x08
 7cc:	f1 85       	ldd	r31, Z+9	; 0x09
 7ce:	e0 2d       	mov	r30, r0
 7d0:	09 95       	icall
 7d2:	89 2b       	or	r24, r25
 7d4:	e1 f6       	brne	.-72     	; 0x78e <fputc+0x10>
 7d6:	d8 01       	movw	r26, r16
 7d8:	16 96       	adiw	r26, 0x06	; 6
 7da:	8d 91       	ld	r24, X+
 7dc:	9c 91       	ld	r25, X
 7de:	17 97       	sbiw	r26, 0x07	; 7
 7e0:	01 96       	adiw	r24, 0x01	; 1
 7e2:	17 96       	adiw	r26, 0x07	; 7
 7e4:	9c 93       	st	X, r25
 7e6:	8e 93       	st	-X, r24
 7e8:	16 97       	sbiw	r26, 0x06	; 6
 7ea:	ce 01       	movw	r24, r28
 7ec:	df 91       	pop	r29
 7ee:	cf 91       	pop	r28
 7f0:	1f 91       	pop	r17
 7f2:	0f 91       	pop	r16
 7f4:	08 95       	ret

000007f6 <__ultoa_invert>:
 7f6:	fa 01       	movw	r30, r20
 7f8:	aa 27       	eor	r26, r26
 7fa:	28 30       	cpi	r18, 0x08	; 8
 7fc:	51 f1       	breq	.+84     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 7fe:	20 31       	cpi	r18, 0x10	; 16
 800:	81 f1       	breq	.+96     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 802:	e8 94       	clt
 804:	6f 93       	push	r22
 806:	6e 7f       	andi	r22, 0xFE	; 254
 808:	6e 5f       	subi	r22, 0xFE	; 254
 80a:	7f 4f       	sbci	r23, 0xFF	; 255
 80c:	8f 4f       	sbci	r24, 0xFF	; 255
 80e:	9f 4f       	sbci	r25, 0xFF	; 255
 810:	af 4f       	sbci	r26, 0xFF	; 255
 812:	b1 e0       	ldi	r27, 0x01	; 1
 814:	3e d0       	rcall	.+124    	; 0x892 <__DATA_REGION_LENGTH__+0x92>
 816:	b4 e0       	ldi	r27, 0x04	; 4
 818:	3c d0       	rcall	.+120    	; 0x892 <__DATA_REGION_LENGTH__+0x92>
 81a:	67 0f       	add	r22, r23
 81c:	78 1f       	adc	r23, r24
 81e:	89 1f       	adc	r24, r25
 820:	9a 1f       	adc	r25, r26
 822:	a1 1d       	adc	r26, r1
 824:	68 0f       	add	r22, r24
 826:	79 1f       	adc	r23, r25
 828:	8a 1f       	adc	r24, r26
 82a:	91 1d       	adc	r25, r1
 82c:	a1 1d       	adc	r26, r1
 82e:	6a 0f       	add	r22, r26
 830:	71 1d       	adc	r23, r1
 832:	81 1d       	adc	r24, r1
 834:	91 1d       	adc	r25, r1
 836:	a1 1d       	adc	r26, r1
 838:	20 d0       	rcall	.+64     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 83a:	09 f4       	brne	.+2      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 83c:	68 94       	set
 83e:	3f 91       	pop	r19
 840:	2a e0       	ldi	r18, 0x0A	; 10
 842:	26 9f       	mul	r18, r22
 844:	11 24       	eor	r1, r1
 846:	30 19       	sub	r19, r0
 848:	30 5d       	subi	r19, 0xD0	; 208
 84a:	31 93       	st	Z+, r19
 84c:	de f6       	brtc	.-74     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 84e:	cf 01       	movw	r24, r30
 850:	08 95       	ret
 852:	46 2f       	mov	r20, r22
 854:	47 70       	andi	r20, 0x07	; 7
 856:	40 5d       	subi	r20, 0xD0	; 208
 858:	41 93       	st	Z+, r20
 85a:	b3 e0       	ldi	r27, 0x03	; 3
 85c:	0f d0       	rcall	.+30     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 85e:	c9 f7       	brne	.-14     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 860:	f6 cf       	rjmp	.-20     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 862:	46 2f       	mov	r20, r22
 864:	4f 70       	andi	r20, 0x0F	; 15
 866:	40 5d       	subi	r20, 0xD0	; 208
 868:	4a 33       	cpi	r20, 0x3A	; 58
 86a:	18 f0       	brcs	.+6      	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 86c:	49 5d       	subi	r20, 0xD9	; 217
 86e:	31 fd       	sbrc	r19, 1
 870:	40 52       	subi	r20, 0x20	; 32
 872:	41 93       	st	Z+, r20
 874:	02 d0       	rcall	.+4      	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 876:	a9 f7       	brne	.-22     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 878:	ea cf       	rjmp	.-44     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 87a:	b4 e0       	ldi	r27, 0x04	; 4
 87c:	a6 95       	lsr	r26
 87e:	97 95       	ror	r25
 880:	87 95       	ror	r24
 882:	77 95       	ror	r23
 884:	67 95       	ror	r22
 886:	ba 95       	dec	r27
 888:	c9 f7       	brne	.-14     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 88a:	00 97       	sbiw	r24, 0x00	; 0
 88c:	61 05       	cpc	r22, r1
 88e:	71 05       	cpc	r23, r1
 890:	08 95       	ret
 892:	9b 01       	movw	r18, r22
 894:	ac 01       	movw	r20, r24
 896:	0a 2e       	mov	r0, r26
 898:	06 94       	lsr	r0
 89a:	57 95       	ror	r21
 89c:	47 95       	ror	r20
 89e:	37 95       	ror	r19
 8a0:	27 95       	ror	r18
 8a2:	ba 95       	dec	r27
 8a4:	c9 f7       	brne	.-14     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 8a6:	62 0f       	add	r22, r18
 8a8:	73 1f       	adc	r23, r19
 8aa:	84 1f       	adc	r24, r20
 8ac:	95 1f       	adc	r25, r21
 8ae:	a0 1d       	adc	r26, r0
 8b0:	08 95       	ret

000008b2 <__prologue_saves__>:
 8b2:	2f 92       	push	r2
 8b4:	3f 92       	push	r3
 8b6:	4f 92       	push	r4
 8b8:	5f 92       	push	r5
 8ba:	6f 92       	push	r6
 8bc:	7f 92       	push	r7
 8be:	8f 92       	push	r8
 8c0:	9f 92       	push	r9
 8c2:	af 92       	push	r10
 8c4:	bf 92       	push	r11
 8c6:	cf 92       	push	r12
 8c8:	df 92       	push	r13
 8ca:	ef 92       	push	r14
 8cc:	ff 92       	push	r15
 8ce:	0f 93       	push	r16
 8d0:	1f 93       	push	r17
 8d2:	cf 93       	push	r28
 8d4:	df 93       	push	r29
 8d6:	cd b7       	in	r28, 0x3d	; 61
 8d8:	de b7       	in	r29, 0x3e	; 62
 8da:	ca 1b       	sub	r28, r26
 8dc:	db 0b       	sbc	r29, r27
 8de:	0f b6       	in	r0, 0x3f	; 63
 8e0:	f8 94       	cli
 8e2:	de bf       	out	0x3e, r29	; 62
 8e4:	0f be       	out	0x3f, r0	; 63
 8e6:	cd bf       	out	0x3d, r28	; 61
 8e8:	09 94       	ijmp

000008ea <__epilogue_restores__>:
 8ea:	2a 88       	ldd	r2, Y+18	; 0x12
 8ec:	39 88       	ldd	r3, Y+17	; 0x11
 8ee:	48 88       	ldd	r4, Y+16	; 0x10
 8f0:	5f 84       	ldd	r5, Y+15	; 0x0f
 8f2:	6e 84       	ldd	r6, Y+14	; 0x0e
 8f4:	7d 84       	ldd	r7, Y+13	; 0x0d
 8f6:	8c 84       	ldd	r8, Y+12	; 0x0c
 8f8:	9b 84       	ldd	r9, Y+11	; 0x0b
 8fa:	aa 84       	ldd	r10, Y+10	; 0x0a
 8fc:	b9 84       	ldd	r11, Y+9	; 0x09
 8fe:	c8 84       	ldd	r12, Y+8	; 0x08
 900:	df 80       	ldd	r13, Y+7	; 0x07
 902:	ee 80       	ldd	r14, Y+6	; 0x06
 904:	fd 80       	ldd	r15, Y+5	; 0x05
 906:	0c 81       	ldd	r16, Y+4	; 0x04
 908:	1b 81       	ldd	r17, Y+3	; 0x03
 90a:	aa 81       	ldd	r26, Y+2	; 0x02
 90c:	b9 81       	ldd	r27, Y+1	; 0x01
 90e:	ce 0f       	add	r28, r30
 910:	d1 1d       	adc	r29, r1
 912:	0f b6       	in	r0, 0x3f	; 63
 914:	f8 94       	cli
 916:	de bf       	out	0x3e, r29	; 62
 918:	0f be       	out	0x3f, r0	; 63
 91a:	cd bf       	out	0x3d, r28	; 61
 91c:	ed 01       	movw	r28, r26
 91e:	08 95       	ret

00000920 <_exit>:
 920:	f8 94       	cli

00000922 <__stop_program>:
 922:	ff cf       	rjmp	.-2      	; 0x922 <__stop_program>
